<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd">

	<!--  스케줄러파일이 존재하는 패키지 설정 -->
	<context:component-scan base-package="net.ilium.paesu.schedule" />
	<!--  해당 태크들은 크론탭을 설정에 필요한 태그들 -->
		<task:scheduler id="Scheduler" pool-size="10" />
		<task:annotation-driven scheduler="Scheduler" />
		

	<!-- 설정 파일 로딩 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/META-INF/properties/global.properties</value>
				<value>classpath:/META-INF/properties/instance.properties</value>
			</list>
		</property>
	</bean>
	<!-- // 설정 파일 로딩 -->

	<!-- Tibero 개발 -->
	<!-- DB 연결 개발-->
	 <!-- bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="${DATASOURCE_JNDI_NAME}" />
		<property name="resourceRef" value="true" />
	</bean-->
		<!-- DB 연결 -->


	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="org.mariadb.jdbc.Driver" />
		<property name="url" value="jdbc:mariadb://103.60.126.122/paesu_db" />
		<property name="username" value="paesu" />
		<property name="password" value="ilium1004!" />
		<property name="maxActive" value="10" />
		<property name="maxIdle" value="5" />
		<property name="initialSize" value="5" />
		<property name="validationQuery" value="SELECT 1 FROM DUAL" />
		<property name="testWhileIdle" value="true" />
	</bean>

 <!-- 
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="org.mariadb.jdbc.Driver" />
		<property name="url" value="jdbc:mariadb://211.198.99.199/paesu_db" />
		<property name="username" value="ilium1004" />
		<property name="password" value="ilium1004!" />
		<property name="maxActive" value="10" />
		<property name="maxIdle" value="5" />
		<property name="initialSize" value="5" />
		<property name="validationQuery" value="SELECT 1 FROM DUAL" />
		<property name="testWhileIdle" value="true" />
	
	</bean> 
	
	 -->
	 
	<!-- // DB 연결 -->
	
	<!--bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.tmax.tibero.jdbc.TbDriver" />
		<property name="url" value="jdbc:tibero:thin:@202.86.11.21:8629:tibero" />
		<property name="username" value="PUSHADM" />
		<property name="password" value="!1PUSHADM#" />
	</bean-->
	
<!-- 	<bean id="dataSource-crm" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="jndiName" value="${DATASOURCE_JNDI_NAME}" />
		<property name="resourceRef" value="true" />
	</bean> -->
	<!-- // DB 연결 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/META-INF/mybatis/oracle/mybatis-config.xml" />
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="push-Scanner" class="com.fas.framework.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="net.ilium" />
		<property name="resourcePattern" value="**/dao/*.class" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate" />
	</bean>
	<!-- // Mybatis -->

	<!-- Transaction manager -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="txUtil" class="com.fas.framework.spring.TxUtil">
		<property name="txManager" ref="transactionManager" />
	</bean>
	
	<!-- MAIL -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtps.hiworks.com" />
		<property name="port" value="465" />
		  <property name="username" value="jhbum@ilium.co.kr" />
		  <property name="password" value="jongbum1!!"/>
		  <property name="javaMailProperties">
			 <props>
				  <prop key="mail.smtp.ssl.enable">true</prop>
			      <prop key="mail.smtp.auth">true</prop>
			      <prop key="mail.smtps.ssl.trust">smtps.hiworks.com</prop>
			 </props>
		  </property> 
	</bean>
	
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- // Transaction manager -->


</beans>